// Gallery page functionality
// Generated by Website Manager

const galleryData = {
  "resistor-based-passive-balancer": {
    "id": "resistor-based-passive-balancer",
    "title": "Resistor based passive balancer",
    "description": "resistor based passive balancer first ever design prototype for EDEXBMS",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_3178.JPEG",
    "tags": [
      "BMS",
      "EDEXBMS",
      "battery management system",
      "passive balancer",
      "balancing"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "differential-voltage-measurement-prototype": {
    "id": "differential-voltage-measurement-prototype",
    "title": "differential voltage measurement prototype",
    "description": "first prototype of differential measurement using resistors. ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_3294.JPEG",
    "tags": [
      "differential voltage measurement",
      "prototype",
      "BMS"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "differential-voltage-measurement-prototype-2": {
    "id": "differential-voltage-measurement-prototype-2",
    "title": "differential voltage measurement prototype 2",
    "description": "-",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_3678.JPG",
    "tags": [
      "differential voltage measurement",
      "prototype",
      "BMS"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "differential-voltage-measurement-prototype-test": {
    "id": "differential-voltage-measurement-prototype-test",
    "title": "differential voltage measurement prototype test",
    "description": "testing the setup using esp32 via i2c",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_3209.JPEG",
    "tags": [
      "prototype",
      "BMS",
      "differential voltage measurement",
      "i2c"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-prototype-v4-front": {
    "id": "edex-bms-prototype-v4-front",
    "title": "EDEX bms prototype v4 front",
    "description": "4th iteration of the EDEXBMS battery management system front",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316392_y.jpg",
    "tags": [
      "EDEXBMS",
      "bms",
      "battery management system"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-assembly-verification": {
    "id": "edex-bms-v4-assembly-verification",
    "title": "EDEX bms v4 assembly verification",
    "description": "checking for proper soldering of the stm32 pins.",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316397_y.jpg",
    "tags": [
      "STM32",
      "PCB",
      "BMS"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-programming-setup": {
    "id": "edex-bms-v4-programming-setup",
    "title": "EDEX bms v4 programming setup",
    "description": "setting up the bms for programming using a stlink and usb to ttl converter uart for debugging",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316385_y.jpg",
    "tags": [
      "STM32",
      "Stlink",
      "programming",
      "BMS"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-smd-assembly": {
    "id": "edex-bms-v4-smd-assembly",
    "title": "EDEX bms v4 SMD assembly ",
    "description": "fully assembled edex bms with all smd components soldered",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316409_y.jpg",
    "tags": [
      "BMS",
      "PCB",
      "SMD",
      "Soldering"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-stencil-and-pcb": {
    "id": "edex-bms-v4-stencil-and-pcb",
    "title": "EDEX bms v4 stencil and pcb ",
    "description": "solder paste stencil and pcb directly from the manufacture right before I soldered everything.",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316382_y.jpg",
    "tags": [
      "BMS",
      "PCB",
      "soldering"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-components-pick-and-place-diagram": {
    "id": "edex-bms-v4-components-pick-and-place-diagram",
    "title": "EDEX bms v4 components pick and place diagram",
    "description": "diagram for picking and placing components onto the pcb on my monitor for easy assembly",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316402_y.jpg",
    "tags": [
      "pick and place",
      "soldering",
      "pcb",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "stm32l-low-power-mcu-for-edex-bms-v4": {
    "id": "stm32l-low-power-mcu-for-edex-bms-v4",
    "title": "STM32L low power mcu for EDEX bms v4",
    "description": "some stm32 low power mcu for the new edexbms v4 series. ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316403_y.jpg",
    "tags": [
      "stm32",
      "stm32l"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-pcb": {
    "id": "edex-bms-v4-pcb",
    "title": "EDEX bms v4 pcb ",
    "description": "custom designed v4 pcb for edexbms. ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/Screenshot%202025-07-14%20214424.png",
    "tags": [
      "easyeda",
      "pcb",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-upper-aluminium-pcb": {
    "id": "edex-bms-v4-upper-aluminium-pcb",
    "title": "EDEX bms v4 upper aluminium pcb ",
    "description": "upper layer of pcb made from aluminium for cooling of the mosfets.",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/Screenshot%202025-07-14%20214431.png",
    "tags": [
      "pcb",
      "easyeda",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-power-stage-pcb-design": {
    "id": "edex-bms-v3-power-stage-pcb-design",
    "title": "EDEX bms v3 power stage pcb design",
    "description": "edexbms v3 power stage pcb layer this houses the mosfets and power components of the bms ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_1226.JPEG",
    "tags": [
      "bms",
      "pcb",
      "easyeda"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-logic-pcb-design": {
    "id": "edex-bms-v3-logic-pcb-design",
    "title": "EDEX bms v3 logic pcb design",
    "description": "this is the logic pcb for edexbms this houses the mcu and balancing",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_1225.JPEG",
    "tags": [
      "bms",
      "pcb",
      "easyeda"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-front": {
    "id": "edex-bms-v3-front",
    "title": "EDEX bms v3 front",
    "description": "fully assembled edexbms v3 front ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316398_y.jpg",
    "tags": [
      "bms",
      "edexbms",
      "battery management system"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-side": {
    "id": "edex-bms-v3-side",
    "title": "EDEX bms v3 side",
    "description": "edexbms assembled side note that the top layer is made from aluminium for cooling ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316391_y.jpg",
    "tags": [
      "bms",
      "edexbms",
      "battery management system"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v4-parts": {
    "id": "edex-bms-v4-parts",
    "title": "EDEX bms v4 parts",
    "description": "edexbms v4 parts for assembly bought from lcsc ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316390_y.jpg",
    "tags": [
      "components",
      "lcsc",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-thermal-pads-for-cooling-balancing-resistors": {
    "id": "edex-bms-v3-thermal-pads-for-cooling-balancing-resistors",
    "title": "EDEX bms v3 thermal pads for cooling balancing resistors",
    "description": "thermal pads to transfer heat from the balancing resistors to the outer aluminium layer ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316400_y.jpg",
    "tags": [
      "cooling",
      "bms",
      "thermal pads"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-programming-setup": {
    "id": "edex-bms-v3-programming-setup",
    "title": "EDEX bms v3 programming setup ",
    "description": "programming setup using stlink and also usb to ttl converter not shown in this photo",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/IMG_1331.JPEG",
    "tags": [
      "programming",
      "stlink",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-assembled-power-stage-pcb": {
    "id": "edex-bms-v3-assembled-power-stage-pcb",
    "title": "EDEX bms v3 assembled power stage pcb",
    "description": "powerstage pcb assembled fully",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316407_y.jpg",
    "tags": [
      "PCB",
      "soldering",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-logic-board-assembly": {
    "id": "edex-bms-v3-logic-board-assembly",
    "title": "EDEX bms v3 logic board assembly",
    "description": "partially assembled logic board for edexbms v3",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316410_y.jpg",
    "tags": [
      "soldering",
      "pcb",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-power-stage-board-reflow-oven-cooking": {
    "id": "edex-bms-v3-power-stage-board-reflow-oven-cooking",
    "title": "EDEX bms v3 power stage board reflow oven cooking",
    "description": "cooking the pcb in the reflow oven for optimal mosfet soldering onto the pcb. ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316394_y.jpg",
    "tags": [
      "bms",
      "pcb",
      "soldering",
      "reflow",
      "solder paste"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-power-stage-pcb-close-up": {
    "id": "edex-bms-v3-power-stage-pcb-close-up",
    "title": "EDEX bms v3 power stage pcb close up ",
    "description": "close up of mosfets reflowed in the reflow oven ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316383_y.jpg",
    "tags": [
      "bms",
      "soldering",
      "mosfet",
      "reflow oven"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-top-aluminium-pcb": {
    "id": "edex-bms-v3-top-aluminium-pcb",
    "title": "EDEX bms v3 top aluminium pcb ",
    "description": "top aluminum pcb design in easyeda ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/Screenshot%202025-07-14%20214147.png",
    "tags": [
      "pcb",
      "easyeda",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-logic-pcb": {
    "id": "edex-bms-v3-logic-pcb",
    "title": "EDEX bms v3 logic pcb ",
    "description": "logic pcb made in easyeda",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/Screenshot%202025-07-14%20214208.png",
    "tags": [
      "bms",
      "pcb",
      "easyeda"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-power-stage-pcb": {
    "id": "edex-bms-v3-power-stage-pcb",
    "title": "EDEX bms v3 power stage pcb",
    "description": "power stage pcb made in easyeda",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/Screenshot%202025-07-14%20214231.png",
    "tags": [
      "pcb",
      "easyeda",
      "bms"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-bodge-fix": {
    "id": "edex-bms-v3-bodge-fix",
    "title": "EDEX bms v3 bodge fix ",
    "description": "power supply mosfet was of a too small package size so it was bodged in order for it to stop overheating. ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316389_y.jpg",
    "tags": [
      "bms",
      "soldering",
      "bodge"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-bodge-fix-closer-look": {
    "id": "edex-bms-v3-bodge-fix-closer-look",
    "title": "EDEX bms v3 bodge fix closer look ",
    "description": "zoomed in ",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316401_y.jpg",
    "tags": [
      "bms",
      "soldering",
      "bodge"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  },
  "edex-bms-v3-custom-protocol-sniffing": {
    "id": "edex-bms-v3-custom-protocol-sniffing",
    "title": "EDEX bms v3 custom protocol sniffing",
    "description": "used a raspberry pi pico as a logic analyser to sniff my custom made protocol",
    "url": "https://raw.githubusercontent.com/rasil1127/syedrasil/refs/heads/main/images/photo_6028142215647316384_y.jpg",
    "tags": [
      "logic analyser",
      "protocol sniffing",
      "bms",
      "programming"
    ],
    "category": "BMS",
    "projectId": "",
    "uploadDate": "2025-07-15"
  }
};

document.addEventListener("DOMContentLoaded", function () {
  const searchInput = document.getElementById("search");
  const categorySelect = document.getElementById("category");
  const tagSelect = document.getElementById("tag");
  const clearFiltersBtn = document.getElementById("clearFilters");
  const galleryItems = document.querySelectorAll(".gallery-item");
  const modal = document.getElementById("imageModal");
  const autocompleteList = document.getElementById("autocomplete-list");

  // Build autocomplete suggestions from existing data
  const autocompleteSuggestions = buildAutocompleteSuggestions();

  function buildAutocompleteSuggestions() {
    const suggestions = new Set();

    galleryItems.forEach((item) => {
      // Add title words
      const titleElement = item.querySelector(".gallery-title");
      if (titleElement) {
        const title = titleElement.textContent;
        title.split(/\s+/).forEach((word) => {
          if (word.length > 2) suggestions.add(word.toLowerCase());
        });
      }

      // Add tags from data-tags attribute
      const tags = (item.dataset.tags || '').split(",");
      tags.forEach((tag) => {
        if (tag && tag.trim()) suggestions.add(tag.toLowerCase().trim());
      });

      // Add category
      if (item.dataset.category) {
        suggestions.add(item.dataset.category.toLowerCase());
      }
    });

    return Array.from(suggestions).sort();
  }

  function showAutocompleteSuggestions(value) {
    if (!value || value.length < 2) {
      if (autocompleteList) autocompleteList.style.display = "none";
      return;
    }

    const filteredSuggestions = autocompleteSuggestions
      .filter((suggestion) =>
        suggestion.toLowerCase().includes(value.toLowerCase()),
      )
      .slice(0, 8); // Limit to 8 suggestions

    if (filteredSuggestions.length === 0) {
      if (autocompleteList) autocompleteList.style.display = "none";
      return;
    }

    if (autocompleteList) {
      autocompleteList.innerHTML = filteredSuggestions
        .map(
          (suggestion) =>
            `<div class="autocomplete-suggestion">${suggestion}</div>`,
        )
        .join("");

      autocompleteList.style.display = "block";

      // Add click handlers to suggestions
      autocompleteList
        .querySelectorAll(".autocomplete-suggestion")
        .forEach((item) => {
          item.addEventListener("click", () => {
            if (searchInput) searchInput.value = item.textContent;
            autocompleteList.style.display = "none";
            filterImages();
          });
        });
    }
  }

  function clearFilters() {
    if (searchInput) searchInput.value = "";
    if (categorySelect) categorySelect.value = "";
    if (tagSelect) tagSelect.value = "";
    if (autocompleteList) autocompleteList.style.display = "none";

    galleryItems.forEach((item) => {
      item.style.display = "block";
    });

    updateStats(galleryItems.length);

    // Update results display
    const resultsCount = document.querySelector(".results-count");
    if (resultsCount) {
      resultsCount.textContent = `Showing ${galleryItems.length} of ${galleryItems.length} images`;
    }
  }

  // Filter functionality
  function filterImages() {
    const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
    const selectedCategory = categorySelect ? categorySelect.value : '';
    const selectedTag = tagSelect ? tagSelect.value : '';

    let visibleCount = 0;

    galleryItems.forEach((item) => {
      const titleElement = item.querySelector(".gallery-title");
      const descriptionElement = item.querySelector(".gallery-description");
      
      const title = titleElement ? titleElement.textContent.toLowerCase() : '';
      const description = descriptionElement ? descriptionElement.textContent.toLowerCase() : '';
      const tags = (item.dataset.tags || '').split(",");
      const category = item.dataset.category || '';

      const matchesSearch =
        searchTerm === "" ||
        title.includes(searchTerm) ||
        description.includes(searchTerm) ||
        tags.some((tag) => tag.toLowerCase().includes(searchTerm));

      const matchesCategory =
        selectedCategory === "" || category === selectedCategory;
      const matchesTag = selectedTag === "" || tags.includes(selectedTag);

      const isVisible = matchesSearch && matchesCategory && matchesTag;

      item.style.display = isVisible ? "block" : "none";

      if (isVisible) {
        visibleCount++;
      }
    });

    // Update stats and results display
    updateStats(visibleCount);
    const resultsCount = document.querySelector(".results-count");
    if (resultsCount) {
      resultsCount.textContent = `Showing ${visibleCount} of ${galleryItems.length} images`;
    }
  }

  function updateStats(visibleCount) {
    const statsNumbers = document.querySelectorAll(".stat-number");
    if (statsNumbers.length >= 3) {
      statsNumbers[2].textContent = visibleCount; // Currently Showing
    }
  }

  // Event listeners for filtering
  if (searchInput) {
    searchInput.addEventListener("input", (e) => {
      showAutocompleteSuggestions(e.target.value);
      filterImages();
    });

    searchInput.addEventListener("blur", () => {
      // Hide autocomplete with delay to allow clicks
      setTimeout(() => {
        if (autocompleteList) autocompleteList.style.display = "none";
      }, 200);
    });
  }

  if (categorySelect) categorySelect.addEventListener("change", filterImages);
  if (tagSelect) tagSelect.addEventListener("change", filterImages);
  if (clearFiltersBtn) clearFiltersBtn.addEventListener("click", clearFilters);

  // Hide autocomplete when clicking outside
  document.addEventListener("click", (e) => {
    if (
      searchInput && autocompleteList &&
      !searchInput.contains(e.target) &&
      !autocompleteList.contains(e.target)
    ) {
      autocompleteList.style.display = "none";
    }
  });

  // Tag click functionality
  document.addEventListener("click", function (e) {
    if (e.target.classList.contains("tag") && e.target.dataset.tag) {
      if (tagSelect) tagSelect.value = e.target.dataset.tag;
      filterImages();
    }
  });

  // Make gallery items clickable to open modal
  document.addEventListener("click", function (e) {
    const galleryItem = e.target.closest(".gallery-item");
    if (galleryItem) {
      const imageId = galleryItem.dataset.imageId;
      if (imageId) {
        openModal(imageId);
      }
    }
  });

  console.log("Gallery page functionality loaded");
});

// Modal functionality - global functions
function openModal(imageId) {
  const modal = document.getElementById("imageModal");
  const modalImage = document.getElementById("modalImage");
  const modalTitle = document.getElementById("modalTitle");
  const modalDescription = document.getElementById("modalDescription");
  const modalTags = document.getElementById("modalTags");
  const modalDownload = document.getElementById("modalDownload");

  const imageData = galleryData[imageId];
  if (!imageData) return;

  if (modalImage) {
    modalImage.src = imageData.url || "";
    modalImage.alt = imageData.title || "";
  }
  
  if (modalTitle) modalTitle.textContent = imageData.title || "";
  if (modalDescription) modalDescription.textContent = imageData.description || "";

  if (modalTags) {
    modalTags.innerHTML = "";
    (imageData.tags || []).forEach((tag) => {
      const tagElement = document.createElement("span");
      tagElement.className = "tag";
      tagElement.textContent = `#${tag}`;
      modalTags.appendChild(tagElement);
    });
  }

  if (modalDownload) {
    modalDownload.onclick = () =>
      downloadImage(imageData.url, `${imageData.title || 'image'}.jpg`);
  }

  if (modal) {
    modal.classList.add("show");
    document.body.style.overflow = "hidden";
  }
}

function closeModal() {
  const modal = document.getElementById("imageModal");
  if (modal) {
    modal.classList.remove("show");
    document.body.style.overflow = "auto";
  }
}

function downloadImage(url, filename) {
  if (!url) return;
  
  const link = document.createElement("a");
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}

// Keyboard navigation for modal
document.addEventListener("keydown", function (e) {
  if (e.key === "Escape") {
    closeModal();
  }
});